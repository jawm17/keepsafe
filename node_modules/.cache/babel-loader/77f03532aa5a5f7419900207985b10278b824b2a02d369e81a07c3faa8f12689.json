{"ast":null,"code":"import { numberToHex } from '../../utils/encoding/toHex.js';\n/**\n * Sets the block's gas limit.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBlockGasLimit.html\n *\n * @param client - Client to use\n * @param parameters – {@link SetBlockGasLimitParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBlockGasLimit } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBlockGasLimit(client, { gasLimit: 420_000n })\n */\nexport async function setBlockGasLimit(client, {\n  gasLimit\n}) {\n  await client.request({\n    method: 'evm_setBlockGasLimit',\n    params: [numberToHex(gasLimit)]\n  });\n}","map":{"version":3,"names":["numberToHex","setBlockGasLimit","client","gasLimit","request","method","params"],"sources":["/Users/envyhose/Desktop/programs/keepsafe_repo/keepsafe/client/node_modules/viem/actions/test/setBlockGasLimit.ts"],"sourcesContent":["import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\nexport type SetBlockGasLimitParameters = {\n  /** Gas limit (in wei). */\n  gasLimit: bigint\n}\n\n/**\n * Sets the block's gas limit.\n *\n * - Docs: https://viem.sh/docs/actions/test/setBlockGasLimit.html\n *\n * @param client - Client to use\n * @param parameters – {@link SetBlockGasLimitParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setBlockGasLimit } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setBlockGasLimit(client, { gasLimit: 420_000n })\n */\nexport async function setBlockGasLimit<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { gasLimit }: SetBlockGasLimitParameters,\n) {\n  await client.request({\n    method: 'evm_setBlockGasLimit',\n    params: [numberToHex(gasLimit)],\n  })\n}\n"],"mappings":"AAOA,SAASA,WAAW,QAAQ,+BAA+B;AAO3D;;;;;;;;;;;;;;;;;;;;AAoBA,OAAO,eAAeC,gBAAgBA,CAIpCC,MAAsE,EACtE;EAAEC;AAAQ,CAA8B;EAExC,MAAMD,MAAM,CAACE,OAAO,CAAC;IACnBC,MAAM,EAAE,sBAAsB;IAC9BC,MAAM,EAAE,CAACN,WAAW,CAACG,QAAQ,CAAC;GAC/B,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}