{"ast":null,"code":"import { numberToHex } from '../../utils/encoding/toHex.js';\nimport { formatFeeHistory } from '../../utils/formatters/feeHistory.js';\n/**\n * Returns a collection of historical gas information.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFeeHistory.html\n * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n *\n * @param client - Client to use\n * @param parameters - {@link GetFeeHistoryParameters}\n * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getFeeHistory } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const feeHistory = await getFeeHistory(client, {\n *   blockCount: 4,\n *   rewardPercentiles: [25, 75],\n * })\n */\nexport async function getFeeHistory(client, {\n  blockCount,\n  blockNumber,\n  blockTag = 'latest',\n  rewardPercentiles\n}) {\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined;\n  const feeHistory = await client.request({\n    method: 'eth_feeHistory',\n    params: [numberToHex(blockCount), blockNumberHex || blockTag, rewardPercentiles]\n  });\n  return formatFeeHistory(feeHistory);\n}","map":{"version":3,"names":["numberToHex","formatFeeHistory","getFeeHistory","client","blockCount","blockNumber","blockTag","rewardPercentiles","blockNumberHex","undefined","feeHistory","request","method","params"],"sources":["/Users/envyhose/Desktop/programs/keepsafe_repo/keepsafe/client/node_modules/viem/actions/public/getFeeHistory.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { formatFeeHistory } from '../../utils/formatters/feeHistory.js'\n\nexport type GetFeeHistoryParameters = {\n  /**\n   * Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n   */\n  blockCount: number\n  /**\n   * A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used.\n   */\n  rewardPercentiles: number[]\n} & (\n  | {\n      blockNumber?: never\n      /**\n       * Highest number block of the requested range.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag\n    }\n  | {\n      /** Highest number block of the requested range. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n)\nexport type GetFeeHistoryReturnType = FeeHistory\n\n/**\n * Returns a collection of historical gas information.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFeeHistory.html\n * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n *\n * @param client - Client to use\n * @param parameters - {@link GetFeeHistoryParameters}\n * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getFeeHistory } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const feeHistory = await getFeeHistory(client, {\n *   blockCount: 4,\n *   rewardPercentiles: [25, 75],\n * })\n */\nexport async function getFeeHistory<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockCount,\n    blockNumber,\n    blockTag = 'latest',\n    rewardPercentiles,\n  }: GetFeeHistoryParameters,\n): Promise<GetFeeHistoryReturnType> {\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n  const feeHistory = await client.request({\n    method: 'eth_feeHistory',\n    params: [\n      numberToHex(blockCount),\n      blockNumberHex || blockTag,\n      rewardPercentiles,\n    ],\n  })\n  return formatFeeHistory(feeHistory)\n}\n"],"mappings":"AAKA,SAASA,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,gBAAgB,QAAQ,sCAAsC;AA4BvE;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAO,eAAeC,aAAaA,CACjCC,MAAiC,EACjC;EACEC,UAAU;EACVC,WAAW;EACXC,QAAQ,GAAG,QAAQ;EACnBC;AAAiB,CACO;EAE1B,MAAMC,cAAc,GAAGH,WAAW,GAAGL,WAAW,CAACK,WAAW,CAAC,GAAGI,SAAS;EACzE,MAAMC,UAAU,GAAG,MAAMP,MAAM,CAACQ,OAAO,CAAC;IACtCC,MAAM,EAAE,gBAAgB;IACxBC,MAAM,EAAE,CACNb,WAAW,CAACI,UAAU,CAAC,EACvBI,cAAc,IAAIF,QAAQ,EAC1BC,iBAAiB;GAEpB,CAAC;EACF,OAAON,gBAAgB,CAACS,UAAU,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}