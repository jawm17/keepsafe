{"ast":null,"code":"import { AbiEventNotFoundError } from '../../errors/abi.js';\nimport { FilterTypeNotSupportedError } from '../../errors/log.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { getEventSelector } from '../hash/getEventSelector.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { encodeAbiParameters } from './encodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nimport { getAbiItem } from './getAbiItem.js';\nexport function encodeEventTopics({\n  abi,\n  eventName,\n  args\n}) {\n  let abiItem = abi[0];\n  if (eventName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: eventName\n    });\n    if (!abiItem) throw new AbiEventNotFoundError(eventName, {\n      docsPath: '/docs/contract/encodeEventTopics'\n    });\n  }\n  if (abiItem.type !== 'event') throw new AbiEventNotFoundError(undefined, {\n    docsPath: '/docs/contract/encodeEventTopics'\n  });\n  const definition = formatAbiItem(abiItem);\n  const signature = getEventSelector(definition);\n  let topics = [];\n  if (args && 'inputs' in abiItem) {\n    const indexedInputs = abiItem.inputs?.filter(param => 'indexed' in param && param.indexed);\n    const args_ = Array.isArray(args) ? args : Object.values(args).length > 0 ? indexedInputs?.map(x => args[x.name]) ?? [] : [];\n    if (args_.length > 0) {\n      topics = indexedInputs?.map((param, i) => Array.isArray(args_[i]) ? args_[i].map((_, j) => encodeArg({\n        param,\n        value: args_[i][j]\n      })) : args_[i] ? encodeArg({\n        param,\n        value: args_[i]\n      }) : null) ?? [];\n    }\n  }\n  return [signature, ...topics];\n}\nfunction encodeArg({\n  param,\n  value\n}) {\n  if (param.type === 'string' || param.type === 'bytes') return keccak256(toBytes(value));\n  if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/)) throw new FilterTypeNotSupportedError(param.type);\n  return encodeAbiParameters([param], [value]);\n}","map":{"version":3,"names":["AbiEventNotFoundError","FilterTypeNotSupportedError","toBytes","getEventSelector","keccak256","encodeAbiParameters","formatAbiItem","getAbiItem","encodeEventTopics","abi","eventName","args","abiItem","name","docsPath","type","undefined","definition","signature","topics","indexedInputs","inputs","filter","param","indexed","args_","Array","isArray","Object","values","length","map","x","i","_","j","encodeArg","value","match"],"sources":["/Users/envyhose/Desktop/programs/keepsafe_repo/keepsafe/client/node_modules/viem/utils/abi/encodeEventTopics.ts"],"sourcesContent":["import type { Abi, AbiParameter, AbiParameterToPrimitiveType } from 'abitype'\n\nimport { AbiEventNotFoundError } from '../../errors/abi.js'\nimport { FilterTypeNotSupportedError } from '../../errors/log.js'\nimport type {\n  AbiItem,\n  EventDefinition,\n  GetEventArgs,\n  InferEventName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { toBytes } from '../encoding/toBytes.js'\nimport { getEventSelector } from '../hash/getEventSelector.js'\nimport { keccak256 } from '../hash/keccak256.js'\n\nimport { encodeAbiParameters } from './encodeAbiParameters.js'\nimport { formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemParameters, getAbiItem } from './getAbiItem.js'\n\nexport type EncodeEventTopicsParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = string,\n  _EventName = InferEventName<TAbi, TEventName>,\n> = {\n  eventName?: _EventName\n} & (TEventName extends string\n  ? { abi: TAbi; args?: GetEventArgs<TAbi, TEventName> }\n  : _EventName extends string\n  ? { abi: [TAbi[number]]; args?: GetEventArgs<TAbi, _EventName> }\n  : never)\n\nexport function encodeEventTopics<\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined = undefined,\n>({ abi, eventName, args }: EncodeEventTopicsParameters<TAbi, TEventName>) {\n  let abiItem = abi[0] as AbiItem\n  if (eventName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: eventName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiEventNotFoundError(eventName, {\n        docsPath: '/docs/contract/encodeEventTopics',\n      })\n  }\n\n  if (abiItem.type !== 'event')\n    throw new AbiEventNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeEventTopics',\n    })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getEventSelector(definition as EventDefinition)\n\n  let topics: Hex[] = []\n  if (args && 'inputs' in abiItem) {\n    const indexedInputs = abiItem.inputs?.filter(\n      (param) => 'indexed' in param && param.indexed,\n    )\n    const args_ = Array.isArray(args)\n      ? args\n      : Object.values(args).length > 0\n      ? indexedInputs?.map((x: any) => (args as any)[x.name]) ?? []\n      : []\n\n    if (args_.length > 0) {\n      topics =\n        indexedInputs?.map((param, i) =>\n          Array.isArray(args_[i])\n            ? args_[i].map((_: any, j: number) =>\n                encodeArg({ param, value: args_[i][j] }),\n              )\n            : args_[i]\n            ? encodeArg({ param, value: args_[i] })\n            : null,\n        ) ?? []\n    }\n  }\n  return [signature, ...topics]\n}\n\nfunction encodeArg({\n  param,\n  value,\n}: { param: AbiParameter; value: AbiParameterToPrimitiveType<AbiParameter> }) {\n  if (param.type === 'string' || param.type === 'bytes')\n    return keccak256(toBytes(value as string))\n  if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n    throw new FilterTypeNotSupportedError(param.type)\n  return encodeAbiParameters([param], [value])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}