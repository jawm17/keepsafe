{"ast":null,"code":"import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n  const transactions = block.transactions?.map(transaction => {\n    if (typeof transaction === 'string') return transaction;\n    return formatTransaction(transaction);\n  });\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty ? BigInt(block.totalDifficulty) : null\n  };\n}\nexport const defineBlock = /*#__PURE__*/defineFormatter('block', formatBlock);","map":{"version":3,"names":["defineFormatter","formatTransaction","formatBlock","block","transactions","map","transaction","baseFeePerGas","BigInt","difficulty","undefined","gasLimit","gasUsed","hash","logsBloom","nonce","number","size","timestamp","totalDifficulty","defineBlock"],"sources":["/Users/envyhose/Desktop/programs/keepsafe_repo/keepsafe/client/node_modules/viem/utils/formatters/block.ts"],"sourcesContent":["import type { Block, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\n\nimport { defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  TChain extends { formatters?: Chain['formatters'] } | undefined =\n    | { formatters?: Chain['formatters'] }\n    | undefined,\n  TIncludeTransactions extends boolean = boolean,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'block',\n    Block<bigint, TIncludeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [K in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, TIncludeTransactions, TBlockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = TIncludeTransactions extends true\n    ? Prettify<FormattedTransaction<TChain, TBlockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport function formatBlock(block: Partial<RpcBlock>) {\n  const transactions = block.transactions?.map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n"],"mappings":"AAUA,SAASA,eAAe,QAAQ,gBAAgB;AAChD,SAAoCC,iBAAiB,QAAQ,kBAAkB;AA8B/E,OAAM,SAAUC,WAAWA,CAACC,KAAwB;EAClD,MAAMC,YAAY,GAAGD,KAAK,CAACC,YAAY,EAAEC,GAAG,CAAEC,WAAW,IAAI;IAC3D,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE,OAAOA,WAAW;IACvD,OAAOL,iBAAiB,CAACK,WAAW,CAAC;EACvC,CAAC,CAAC;EACF,OAAO;IACL,GAAGH,KAAK;IACRI,aAAa,EAAEJ,KAAK,CAACI,aAAa,GAAGC,MAAM,CAACL,KAAK,CAACI,aAAa,CAAC,GAAG,IAAI;IACvEE,UAAU,EAAEN,KAAK,CAACM,UAAU,GAAGD,MAAM,CAACL,KAAK,CAACM,UAAU,CAAC,GAAGC,SAAS;IACnEC,QAAQ,EAAER,KAAK,CAACQ,QAAQ,GAAGH,MAAM,CAACL,KAAK,CAACQ,QAAQ,CAAC,GAAGD,SAAS;IAC7DE,OAAO,EAAET,KAAK,CAACS,OAAO,GAAGJ,MAAM,CAACL,KAAK,CAACS,OAAO,CAAC,GAAGF,SAAS;IAC1DG,IAAI,EAAEV,KAAK,CAACU,IAAI,GAAGV,KAAK,CAACU,IAAI,GAAG,IAAI;IACpCC,SAAS,EAAEX,KAAK,CAACW,SAAS,GAAGX,KAAK,CAACW,SAAS,GAAG,IAAI;IACnDC,KAAK,EAAEZ,KAAK,CAACY,KAAK,GAAGZ,KAAK,CAACY,KAAK,GAAG,IAAI;IACvCC,MAAM,EAAEb,KAAK,CAACa,MAAM,GAAGR,MAAM,CAACL,KAAK,CAACa,MAAM,CAAC,GAAG,IAAI;IAClDC,IAAI,EAAEd,KAAK,CAACc,IAAI,GAAGT,MAAM,CAACL,KAAK,CAACc,IAAI,CAAC,GAAGP,SAAS;IACjDQ,SAAS,EAAEf,KAAK,CAACe,SAAS,GAAGV,MAAM,CAACL,KAAK,CAACe,SAAS,CAAC,GAAGR,SAAS;IAChEN,YAAY;IACZe,eAAe,EAAEhB,KAAK,CAACgB,eAAe,GAClCX,MAAM,CAACL,KAAK,CAACgB,eAAe,CAAC,GAC7B;GACI;AACZ;AAEA,OAAO,MAAMC,WAAW,GAAG,aAAcpB,eAAe,CAAC,OAAO,EAAEE,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}