{"ast":null,"code":"import { InjectedConnector } from \"./chunk-BVC4KGLQ.js\";\nimport { __privateAdd, __privateGet, __privateMethod, __privateSet } from \"./chunk-MQXBDTVK.js\";\n\n// src/utils/configureChains.ts\nimport { createPublicClient, fallback, http, webSocket } from \"viem\";\nfunction configureChains(defaultChains, providers, {\n  batch = {\n    multicall: {\n      wait: 32\n    }\n  },\n  pollingInterval = 4e3,\n  rank,\n  retryCount,\n  retryDelay,\n  stallTimeout\n} = {}) {\n  if (!defaultChains.length) throw new Error(\"must have at least one chain\");\n  let chains = [];\n  const httpUrls = {};\n  const wsUrls = {};\n  for (const chain of defaultChains) {\n    let configExists = false;\n    for (const provider of providers) {\n      const apiConfig = provider(chain);\n      if (!apiConfig) continue;\n      configExists = true;\n      if (!chains.some(({\n        id\n      }) => id === chain.id)) {\n        chains = [...chains, apiConfig.chain];\n      }\n      httpUrls[chain.id] = [...(httpUrls[chain.id] || []), ...apiConfig.rpcUrls.http];\n      if (apiConfig.rpcUrls.webSocket) {\n        wsUrls[chain.id] = [...(wsUrls[chain.id] || []), ...apiConfig.rpcUrls.webSocket];\n      }\n    }\n    if (!configExists) {\n      throw new Error([`Could not find valid provider configuration for chain \"${chain.name}\".\n`, \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\", \"Read more: https://wagmi.sh/core/providers/jsonRpc\"].join(\"\\n\"));\n    }\n  }\n  return {\n    chains,\n    publicClient: ({\n      chainId\n    }) => {\n      const activeChain = chains.find(x => x.id === chainId) ?? defaultChains[0];\n      const chainHttpUrls = httpUrls[activeChain.id];\n      if (!chainHttpUrls || !chainHttpUrls[0]) throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      const publicClient = createPublicClient({\n        batch,\n        chain: activeChain,\n        transport: fallback(chainHttpUrls.map(url => http(url, {\n          timeout: stallTimeout\n        })), {\n          rank,\n          retryCount,\n          retryDelay\n        }),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    },\n    webSocketPublicClient: ({\n      chainId\n    }) => {\n      const activeChain = chains.find(x => x.id === chainId) ?? defaultChains[0];\n      const chainWsUrls = wsUrls[activeChain.id];\n      if (!chainWsUrls || !chainWsUrls[0]) return void 0;\n      const publicClient = createPublicClient({\n        batch,\n        chain: activeChain,\n        transport: fallback(chainWsUrls.map(url => webSocket(url, {\n          timeout: stallTimeout\n        })), {\n          rank,\n          retryCount,\n          retryDelay\n        }),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    }\n  };\n}\n\n// src/errors.ts\nimport { ConnectorNotFoundError } from \"@wagmi/connectors\";\nvar ChainMismatchError = class extends Error {\n  constructor({\n    activeChain,\n    targetChain\n  }) {\n    super(`Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`);\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor({\n    chainId,\n    connectorId\n  }) {\n    super(`Chain \"${chainId}\" not configured${connectorId ? ` for connector \"${connectorId}\"` : \"\"}.`);\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConfigChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConfigChainsNotFound\";\n    this.message = \"No chains were found on the wagmi config. Some functions that require a chain may not work.\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor({\n    connector\n  }) {\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b) return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor) return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) if (!deepEqual(a[i], b[i])) return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key])) return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nvar findAndReplace = (cacheRef, {\n  find,\n  replace\n}) => {\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map(item => findAndReplace(item, {\n      find,\n      replace\n    }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce((curr, [key, value]) => ({\n      ...curr,\n      [key]: findAndReplace(value, {\n        find,\n        replace\n      })\n    }), {});\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigInts = findAndReplace(cache, {\n    find: data => typeof data === \"string\" && data.startsWith(\"#bigint.\"),\n    replace: data => BigInt(data.replace(\"#bigint.\", \"\"))\n  });\n  return deserializedCacheWithBigInts;\n}\n\n// src/utils/getParameters.ts\nfunction getCallParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    blockNumber: args.blockNumber,\n    blockTag: args.blockTag,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\nfunction getSendTransactionParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\n\n// src/utils/getUnit.ts\nimport { weiUnits } from \"viem\";\nfunction getUnit(unit) {\n  if (typeof unit === \"number\") return unit;\n  if (unit === \"wei\") return 0;\n  return Math.abs(weiUnits[unit]);\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const {\n    length\n  } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(value, createReplacer((key, value_) => {\n    const value2 = typeof value_ === \"bigint\" ? `#bigint.${value_.toString()}` : value_;\n    return replacer?.(key, value2) || value2;\n  }, circularReplacer), indent ?? void 0);\n}\n\n// src/config.ts\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\nimport { createStore } from \"zustand/vanilla\";\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: _key => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: _key => null\n};\nfunction createStorage({\n  deserialize: deserialize2 = deserialize,\n  key: prefix = \"wagmi\",\n  serialize: serialize2 = serialize,\n  storage\n}) {\n  return {\n    ...storage,\n    getItem: (key, defaultState = null) => {\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: key => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/config.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Config = class {\n  constructor({\n    autoConnect = false,\n    connectors = [new InjectedConnector()],\n    publicClient,\n    storage = createStorage({\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n    }),\n    logger = {\n      warn: console.warn\n    },\n    webSocketPublicClient\n  }) {\n    __privateAdd(this, _addEffects);\n    this.publicClients = /* @__PURE__ */new Map();\n    this.webSocketPublicClients = /* @__PURE__ */new Map();\n    __privateAdd(this, _isAutoConnecting, void 0);\n    __privateAdd(this, _lastUsedConnector, void 0);\n    this.args = {\n      autoConnect,\n      connectors,\n      logger,\n      publicClient,\n      storage,\n      webSocketPublicClient\n    };\n    let status = \"disconnected\";\n    let chainId;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey);\n        const data = rawState?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId = data?.chain?.id;\n      } catch (_error) {}\n    }\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach(connector => connector.setStorage(storage));\n    this.store = createStore(subscribeWithSelector(persist(() => ({\n      connectors: connectors_,\n      publicClient: this.getPublicClient({\n        chainId\n      }),\n      status,\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }), {\n      name: storeKey,\n      storage,\n      partialize: state => ({\n        ...(autoConnect && {\n          data: {\n            account: state?.data?.account,\n            chain: state?.data?.chain\n          }\n        }),\n        chains: state?.chains\n      }),\n      version: 2\n    })));\n    this.storage = storage;\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\") setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n  get publicClient() {\n    return this.store.getState().publicClient;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketPublicClient() {\n    return this.store.getState().webSocketPublicClient;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState(x => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector) await this.connector.disconnect?.();\n    __privateSet(this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if (__privateGet(this, _isAutoConnecting)) return;\n    __privateSet(this, _isAutoConnecting, true);\n    this.setState(x => ({\n      ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(x => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized) continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized) continue;\n      const data = await connector.connect();\n      this.setState(x => ({\n        ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected) this.setState(x => ({\n      ...x,\n      data: void 0,\n      status: \"disconnected\"\n    }));\n    __privateSet(this, _isAutoConnecting, false);\n    return this.data;\n  }\n  setConnectors(connectors) {\n    this.args = {\n      ...this.args,\n      connectors\n    };\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach(connector => connector.setStorage(this.args.storage));\n    this.setState(x => ({\n      ...x,\n      connectors: connectors_\n    }));\n  }\n  getPublicClient({\n    chainId\n  } = {}) {\n    let publicClient_ = this.publicClients.get(-1);\n    if (publicClient_ && publicClient_?.chain.id === chainId) return publicClient_;\n    publicClient_ = this.publicClients.get(chainId ?? -1);\n    if (publicClient_) return publicClient_;\n    const {\n      publicClient\n    } = this.args;\n    publicClient_ = typeof publicClient === \"function\" ? publicClient({\n      chainId\n    }) : publicClient;\n    this.publicClients.set(chainId ?? -1, publicClient_);\n    return publicClient_;\n  }\n  setPublicClient(publicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      publicClient\n    };\n    this.publicClients.clear();\n    this.setState(x => ({\n      ...x,\n      publicClient: this.getPublicClient({\n        chainId\n      })\n    }));\n  }\n  getWebSocketPublicClient({\n    chainId\n  } = {}) {\n    let webSocketPublicClient_ = this.webSocketPublicClients.get(-1);\n    if (webSocketPublicClient_ && webSocketPublicClient_?.chain.id === chainId) return webSocketPublicClient_;\n    webSocketPublicClient_ = this.webSocketPublicClients.get(chainId ?? -1);\n    if (webSocketPublicClient_) return webSocketPublicClient_;\n    const {\n      webSocketPublicClient\n    } = this.args;\n    webSocketPublicClient_ = typeof webSocketPublicClient === \"function\" ? webSocketPublicClient({\n      chainId\n    }) : webSocketPublicClient;\n    if (webSocketPublicClient_) this.webSocketPublicClients.set(chainId ?? -1, webSocketPublicClient_);\n    return webSocketPublicClient_;\n  }\n  setWebSocketPublicClient(webSocketPublicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      webSocketPublicClient\n    };\n    this.webSocketPublicClients.clear();\n    this.setState(x => ({\n      ...x,\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }));\n  }\n  setLastUsedConnector(lastUsedConnector = null) {\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function () {\n  const onChange = data => {\n    this.setState(x => ({\n      ...x,\n      data: {\n        ...x.data,\n        ...data\n      }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = error => {\n    this.setState(x => ({\n      ...x,\n      error\n    }));\n  };\n  this.store.subscribe(({\n    connector\n  }) => connector, (connector, prevConnector) => {\n    prevConnector?.off?.(\"change\", onChange);\n    prevConnector?.off?.(\"disconnect\", onDisconnect);\n    prevConnector?.off?.(\"error\", onError);\n    if (!connector) return;\n    connector.on?.(\"change\", onChange);\n    connector.on?.(\"disconnect\", onDisconnect);\n    connector.on?.(\"error\", onError);\n  });\n  const {\n    publicClient,\n    webSocketPublicClient\n  } = this.args;\n  const subscribePublicClient = typeof publicClient === \"function\";\n  const subscribeWebSocketPublicClient = typeof webSocketPublicClient === \"function\";\n  if (subscribePublicClient || subscribeWebSocketPublicClient) this.store.subscribe(({\n    data\n  }) => data?.chain?.id, chainId => {\n    this.setState(x => ({\n      ...x,\n      publicClient: this.getPublicClient({\n        chainId\n      }),\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }));\n  });\n};\nvar config;\nfunction createConfig(args) {\n  const config_ = new Config(args);\n  config = config_;\n  return config_;\n}\nfunction getConfig() {\n  if (!config) {\n    throw new Error(\"No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config\");\n  }\n  return config;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect({\n  chainId,\n  connector\n}) {\n  const config2 = getConfig();\n  const activeConnector = config2.connector;\n  if (activeConnector && connector.id === activeConnector.id) throw new ConnectorAlreadyConnectedError();\n  try {\n    config2.setState(x => ({\n      ...x,\n      status: \"connecting\"\n    }));\n    const data = await connector.connect({\n      chainId\n    });\n    config2.setLastUsedConnector(connector.id);\n    config2.setState(x => ({\n      ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    config2.storage.setItem(\"connected\", true);\n    return {\n      ...data,\n      connector\n    };\n  } catch (err) {\n    config2.setState(x => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const config2 = getConfig();\n  if (config2.connector) await config2.connector.disconnect();\n  config2.clearState();\n  config2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\nimport { ContractFunctionExecutionError as ContractFunctionExecutionError3, formatUnits as formatUnits2, hexToString as hexToString2, trim as trim2 } from \"viem\";\n\n// src/constants/abis.ts\nvar erc20ABI = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"allowance\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"decimals\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transfer\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}];\nvar erc20ABI_bytes32 = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"allowance\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"decimals\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"bytes32\"\n  }]\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"bytes32\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transfer\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}];\nvar erc721ABI = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"ApprovalForAll\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"approved\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"getApproved\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }]\n}, {\n  type: \"function\",\n  name: \"isApprovedForAll\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"operator\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"ownerOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }]\n}, {\n  type: \"function\",\n  name: \"safeTransferFrom\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"safeTransferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"id\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"setApprovalForAll\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenByIndex\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenByIndex\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenURI\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"tokeId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}];\nvar erc4626ABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Approval\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"Deposit\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Transfer\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"Withdraw\",\n  type: \"event\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  name: \"allowance\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"asset\",\n  outputs: [{\n    name: \"assetTokenAddress\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"convertToAssets\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"convertToShares\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }],\n  name: \"deposit\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"caller\",\n    type: \"address\"\n  }],\n  name: \"maxDeposit\",\n  outputs: [{\n    name: \"maxAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"caller\",\n    type: \"address\"\n  }],\n  name: \"maxMint\",\n  outputs: [{\n    name: \"maxShares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"maxRedeem\",\n  outputs: [{\n    name: \"maxShares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"maxWithdraw\",\n  outputs: [{\n    name: \"maxAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }],\n  name: \"mint\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"previewDeposit\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"previewMint\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"previewRedeem\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"previewWithdraw\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"redeem\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalAssets\",\n  outputs: [{\n    name: \"totalManagedAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transfer\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"withdraw\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\n\n// src/actions/contracts/fetchToken.ts\nimport { ContractFunctionExecutionError, formatUnits, hexToString, trim } from \"viem\";\nasync function fetchToken({\n  address,\n  chainId,\n  formatUnits: unit = 18\n}) {\n  async function fetchToken_({\n    abi\n  }) {\n    const erc20Config = {\n      address,\n      abi,\n      chainId\n    };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [{\n        ...erc20Config,\n        functionName: \"decimals\"\n      }, {\n        ...erc20Config,\n        functionName: \"name\"\n      }, {\n        ...erc20Config,\n        functionName: \"symbol\"\n      }, {\n        ...erc20Config,\n        functionName: \"totalSupply\"\n      }]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: formatUnits(totalSupply, getUnit(unit)),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({\n      abi: erc20ABI\n    });\n  } catch (err) {\n    if (err instanceof ContractFunctionExecutionError) {\n      const {\n        name,\n        symbol,\n        ...rest\n      } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: hexToString(trim(name, {\n          dir: \"right\"\n        })),\n        symbol: hexToString(trim(symbol, {\n          dir: \"right\"\n        })),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/viem/getPublicClient.ts\nfunction getPublicClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  if (chainId) return config2.getPublicClient({\n    chainId\n  }) || config2.publicClient;\n  return config2.publicClient;\n}\n\n// src/actions/viem/getWalletClient.ts\nasync function getWalletClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  const walletClient = (await config2.connector?.getWalletClient?.({\n    chainId\n  })) || null;\n  return walletClient;\n}\n\n// src/actions/viem/getWebSocketPublicClient.ts\nfunction getWebSocketPublicClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  if (chainId) return config2.getWebSocketPublicClient({\n    chainId\n  }) || config2.webSocketPublicClient;\n  return config2.webSocketPublicClient;\n}\n\n// src/actions/viem/watchPublicClient.ts\nfunction watchPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getPublicClient(args));\n  const unsubscribe = config2.subscribe(({\n    publicClient\n  }) => publicClient, handleChange);\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWalletClient.ts\nimport { shallow } from \"zustand/shallow\";\nfunction watchWalletClient({\n  chainId\n}, callback) {\n  const config2 = getConfig();\n  const handleChange = async ({\n    chainId: chainId_\n  }) => {\n    if (chainId && chainId_ && chainId !== chainId_) return;\n    const walletClient = await getWalletClient({\n      chainId\n    });\n    if (!getConfig().connector) return callback(null);\n    return callback(walletClient);\n  };\n  const unsubscribe = config2.subscribe(({\n    data,\n    connector\n  }) => ({\n    account: data?.account,\n    chainId: data?.chain?.id,\n    connector\n  }), handleChange, {\n    equalityFn: shallow\n  });\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWebSocketPublicClient.ts\nfunction watchWebSocketPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getWebSocketPublicClient(args));\n  const unsubscribe = config2.subscribe(({\n    webSocketPublicClient\n  }) => webSocketPublicClient, handleChange);\n  return unsubscribe;\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract({\n  abi,\n  address,\n  args,\n  chainId,\n  functionName,\n  walletClient: walletClient_,\n  ...config2\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const walletClient = walletClient_ ?? (await getWalletClient({\n    chainId\n  }));\n  if (!walletClient) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  const {\n    account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getCallParameters(config2);\n  const {\n    result,\n    request\n  } = await publicClient.simulateContract({\n    abi,\n    address,\n    functionName,\n    args,\n    account: account || walletClient.account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  });\n  const minimizedAbi = abi.filter(abiItem => \"name\" in abiItem && abiItem.name === functionName);\n  return {\n    mode: \"prepared\",\n    request: {\n      ...request,\n      abi: minimizedAbi,\n      chainId\n    },\n    result\n  };\n}\n\n// src/actions/contracts/getContract.ts\nimport { getContract as getContract_ } from \"viem\";\nfunction getContract({\n  address,\n  abi,\n  chainId,\n  walletClient\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  return getContract_({\n    address,\n    abi,\n    publicClient,\n    walletClient\n  });\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall({\n  chainId,\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  if (!publicClient.chains) throw new ConfigChainsNotFound();\n  if (chainId && publicClient.chain.id !== chainId) throw new ChainNotConfiguredError({\n    chainId\n  });\n  return publicClient.multicall({\n    allowFailure: args.allowFailure ?? true,\n    blockNumber,\n    blockTag,\n    contracts\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract({\n  address,\n  account,\n  chainId,\n  abi,\n  args,\n  functionName,\n  blockNumber,\n  blockTag\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  return publicClient.readContract({\n    abi,\n    address,\n    account,\n    functionName,\n    args,\n    blockNumber,\n    blockTag\n  });\n}\n\n// src/actions/contracts/readContracts.ts\nimport { ContractFunctionExecutionError as ContractFunctionExecutionError2 } from \"viem\";\nasync function readContracts({\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const {\n    allowFailure = true\n  } = args;\n  try {\n    const publicClient = getPublicClient();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId = contract.chainId ?? publicClient.chain.id;\n      return {\n        ...contracts2,\n        [chainId]: [...(contracts2[chainId] || []), {\n          contract,\n          index\n        }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(([chainId, contracts2]) => multicall({\n      allowFailure,\n      chainId: parseInt(chainId),\n      contracts: contracts2.map(({\n        contract\n      }) => contract),\n      blockNumber,\n      blockTag\n    }));\n    const multicallResults = (await Promise.all(promises())).flat();\n    const resultIndexes = Object.values(contractsByChainId).flatMap(contracts2 => contracts2.map(({\n      index\n    }) => index));\n    return multicallResults.reduce((results, result, index) => {\n      if (results) results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractFunctionExecutionError2) throw err;\n    const promises = () => contracts.map(contract => readContract({\n      ...contract,\n      blockNumber,\n      blockTag\n    }));\n    if (allowFailure) return (await Promise.allSettled(promises())).map(result => {\n      if (result.status === \"fulfilled\") return {\n        result: result.value,\n        status: \"success\"\n      };\n      return {\n        error: result.reason,\n        result: void 0,\n        status: \"failure\"\n      };\n    });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\nimport { shallow as shallow2 } from \"zustand/shallow\";\nfunction watchContractEvent({\n  address,\n  abi,\n  chainId,\n  eventName\n}, callback) {\n  let unwatch;\n  const watchEvent = async () => {\n    if (unwatch) unwatch();\n    const publicClient = getWebSocketPublicClient({\n      chainId\n    }) || getPublicClient({\n      chainId\n    });\n    unwatch = publicClient.watchContractEvent({\n      address,\n      abi,\n      eventName,\n      onLogs: callback\n    });\n  };\n  watchEvent();\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(({\n    publicClient,\n    webSocketPublicClient\n  }) => ({\n    publicClient,\n    webSocketPublicClient\n  }), watchEvent, {\n    equalityFn: shallow2\n  });\n  return () => {\n    unwatch?.();\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nimport { shallow as shallow3 } from \"zustand/shallow\";\nfunction watchBlockNumber(args, callback) {\n  let unwatch;\n  const createListener = publicClient => {\n    if (unwatch) unwatch();\n    unwatch = publicClient.watchBlockNumber({\n      onBlockNumber: callback,\n      emitOnBegin: true,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({\n    chainId: args.chainId\n  }) ?? getPublicClient({\n    chainId: args.chainId\n  });\n  if (args.listen) createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(({\n    publicClient,\n    webSocketPublicClient\n  }) => ({\n    publicClient,\n    webSocketPublicClient\n  }), async ({\n    publicClient,\n    webSocketPublicClient\n  }) => {\n    const publicClient_2 = webSocketPublicClient ?? publicClient;\n    if (args.listen && !args.chainId && publicClient_2) {\n      createListener(publicClient_2);\n    }\n  }, {\n    equalityFn: shallow3\n  });\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await multicall(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(({\n    publicClient\n  }) => publicClient, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContract(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(({\n    publicClient\n  }) => publicClient, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContracts(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(({\n    publicClient\n  }) => publicClient, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract(config2) {\n  const walletClient = await getWalletClient({\n    chainId: config2.chainId\n  });\n  if (!walletClient) throw new ConnectorNotFoundError();\n  if (config2.chainId) assertActiveChain({\n    chainId: config2.chainId\n  });\n  let request;\n  if (config2.mode === \"prepared\") {\n    request = config2.request;\n  } else {\n    const {\n      chainId: _,\n      mode: __,\n      ...args\n    } = config2;\n    const res = await prepareWriteContract(args);\n    request = res.request;\n  }\n  const hash = await walletClient.writeContract({\n    ...request,\n    chain: null\n  });\n  return {\n    hash\n  };\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance({\n  address,\n  chainId,\n  formatUnits: unit,\n  token\n}) {\n  const config2 = getConfig();\n  const publicClient = getPublicClient({\n    chainId\n  });\n  if (token) {\n    const fetchContractBalance = async ({\n      abi\n    }) => {\n      const erc20Config = {\n        abi,\n        address: token,\n        chainId\n      };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [{\n          ...erc20Config,\n          functionName: \"balanceOf\",\n          args: [address]\n        }, {\n          ...erc20Config,\n          functionName: \"decimals\"\n        }, {\n          ...erc20Config,\n          functionName: \"symbol\"\n        }]\n      });\n      return {\n        decimals,\n        formatted: formatUnits2(value2 ?? \"0\", getUnit(unit ?? decimals)),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({\n        abi: erc20ABI\n      });\n    } catch (err) {\n      if (err instanceof ContractFunctionExecutionError3) {\n        const {\n          symbol,\n          ...rest\n        } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: hexToString2(trim2(symbol, {\n            dir: \"right\"\n          })),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [...(config2.publicClient.chains || []), ...(config2.chains ?? [])];\n  const value = await publicClient.getBalance({\n    address\n  });\n  const chain = chains.find(x => x.id === publicClient.chain.id);\n  return {\n    decimals: chain?.nativeCurrency.decimals ?? 18,\n    formatted: formatUnits2(value ?? \"0\", getUnit(unit ?? 18)),\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\n    value\n  };\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const {\n    data,\n    connector,\n    status\n  } = getConfig();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const config2 = getConfig();\n  const chainId = config2.data?.chain?.id;\n  const activeChains = config2.chains ?? [];\n  const activeChain = [...(config2.publicClient?.chains || []), ...activeChains].find(x => x.id === chainId) ?? {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    nativeCurrency: {\n      name: \"Ether\",\n      decimals: 18,\n      symbol: \"ETH\"\n    },\n    rpcUrls: {\n      default: {\n        http: [\"\"]\n      },\n      public: {\n        http: [\"\"]\n      }\n    }\n  };\n  return {\n    chain: chainId ? {\n      ...activeChain,\n      ...config2.data?.chain,\n      id: chainId\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  const walletClient = await getWalletClient();\n  if (!walletClient) throw new ConnectorNotFoundError();\n  return await walletClient.signMessage({\n    message: args.message\n  });\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData({\n  domain,\n  message,\n  primaryType,\n  types\n}) {\n  const walletClient = await getWalletClient();\n  if (!walletClient) throw new ConnectorNotFoundError();\n  const {\n    chainId\n  } = domain;\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  return walletClient.signTypedData({\n    message,\n    primaryType,\n    types,\n    domain\n  });\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork({\n  chainId\n}) {\n  const {\n    connector\n  } = getConfig();\n  if (!connector) throw new ConnectorNotFoundError();\n  if (!connector.switchChain) throw new SwitchChainNotSupportedError({\n    connector\n  });\n  return connector.switchChain(chainId);\n}\n\n// src/actions/accounts/watchAccount.ts\nimport { shallow as shallow4 } from \"zustand/shallow\";\nfunction watchAccount(callback, {\n  selector = x => x\n} = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = config2.subscribe(({\n    data,\n    connector,\n    status\n  }) => selector({\n    address: data?.account,\n    connector,\n    status\n  }), handleChange, {\n    equalityFn: shallow4\n  });\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\nimport { shallow as shallow5 } from \"zustand/shallow\";\nfunction watchNetwork(callback, {\n  selector = x => x\n} = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = config2.subscribe(({\n    data,\n    chains\n  }) => selector({\n    chainId: data?.chain?.id,\n    chains\n  }), handleChange, {\n    equalityFn: shallow5\n  });\n  return unsubscribe;\n}\n\n// src/actions/ens/fetchEnsAddress.ts\nimport { getAddress } from \"viem\";\nimport { normalize } from \"viem/ens\";\nasync function fetchEnsAddress({\n  chainId,\n  name\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const address = await publicClient.getEnsAddress({\n    name: normalize(name)\n  });\n  try {\n    if (address === \"0x0000000000000000000000000000000000000000\") return null;\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\nimport { normalize as normalize2 } from \"viem/ens\";\nasync function fetchEnsAvatar({\n  name,\n  chainId\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const avatar = await publicClient.getEnsAvatar({\n    name: normalize2(name)\n  });\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\nimport { getAddress as getAddress2 } from \"viem\";\nasync function fetchEnsName({\n  address,\n  chainId\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  return publicClient.getEnsName({\n    address: getAddress2(address)\n  });\n}\n\n// src/actions/ens/fetchEnsResolver.ts\nimport { normalize as normalize3 } from \"viem/ens\";\nasync function fetchEnsResolver({\n  chainId,\n  name\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const resolver = await publicClient.getEnsResolver({\n    name: normalize3(name)\n  });\n  return resolver;\n}\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber({\n  chainId\n} = {}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const blockNumber = await publicClient.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/fetchFeeData.ts\nimport { formatUnits as formatUnits3, parseGwei } from \"viem\";\nasync function fetchFeeData({\n  chainId,\n  formatUnits: units = \"gwei\"\n} = {}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const block = await publicClient.getBlock();\n  let gasPrice = null;\n  try {\n    gasPrice = await publicClient.getGasPrice();\n  } catch {}\n  let lastBaseFeePerGas = null;\n  let maxFeePerGas = null;\n  let maxPriorityFeePerGas = null;\n  if (block?.baseFeePerGas) {\n    lastBaseFeePerGas = block.baseFeePerGas;\n    maxPriorityFeePerGas = parseGwei(\"1\");\n    maxFeePerGas = block.baseFeePerGas * 2n + maxPriorityFeePerGas;\n  }\n  const unit = getUnit(units);\n  const formatted = {\n    gasPrice: gasPrice ? formatUnits3(gasPrice, unit) : null,\n    maxFeePerGas: maxFeePerGas ? formatUnits3(maxFeePerGas, unit) : null,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ? formatUnits3(maxPriorityFeePerGas, unit) : null\n  };\n  return {\n    lastBaseFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    formatted\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction({\n  chainId,\n  hash\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  return publicClient.getTransaction({\n    hash\n  });\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nimport { isAddress } from \"viem\";\nasync function prepareSendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas: gas_,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  to: to_,\n  value,\n  walletClient: walletClient_\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const walletClient = walletClient_ ?? (await getWalletClient({\n    chainId\n  }));\n  if (!walletClient) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  const to = (to_ && !isAddress(to_) ? await fetchEnsAddress({\n    name: to_\n  }) : to_) || void 0;\n  if (to && !isAddress(to)) throw new Error(\"Invalid address\");\n  const gas = typeof gas_ === \"undefined\" ? await publicClient.estimateGas({\n    accessList,\n    account: walletClient.account,\n    data,\n    gas: gas_ ?? void 0,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value\n  }) : gas_ || void 0;\n  return {\n    accessList,\n    account,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode: \"prepared\",\n    nonce,\n    to,\n    value,\n    ...(chainId ? {\n      chainId\n    } : {})\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value\n}) {\n  const walletClient = await getWalletClient({\n    chainId\n  });\n  if (!walletClient) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  let args;\n  if (mode === \"prepared\") {\n    args = {\n      account,\n      accessList,\n      chain: null,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    };\n  } else {\n    args = await prepareSendTransaction({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas: gas || null,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    });\n  }\n  const hash = await walletClient.sendTransaction({\n    ...args,\n    chain: null\n  });\n  return {\n    hash\n  };\n}\n\n// src/actions/transactions/waitForTransaction.ts\nimport { hexToString as hexToString3 } from \"viem\";\nasync function waitForTransaction({\n  chainId,\n  confirmations = 1,\n  hash,\n  onReplaced,\n  timeout = 0\n}) {\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const receipt = await publicClient.waitForTransactionReceipt({\n    hash,\n    confirmations,\n    onReplaced,\n    timeout\n  });\n  if (receipt.status === \"reverted\") {\n    const txn = await publicClient.getTransaction({\n      hash: receipt.transactionHash\n    });\n    const code = await publicClient.call({\n      ...txn,\n      gasPrice: txn.type !== \"eip1559\" ? txn.gasPrice : void 0,\n      maxFeePerGas: txn.type === \"eip1559\" ? txn.maxFeePerGas : void 0,\n      maxPriorityFeePerGas: txn.type === \"eip1559\" ? txn.maxPriorityFeePerGas : void 0\n    });\n    const reason = hexToString3(`0x${code.substring(138)}`);\n    throw new Error(reason);\n  }\n  return receipt;\n}\n\n// src/actions/transactions/watchPendingTransactions.ts\nimport { shallow as shallow6 } from \"zustand/shallow\";\nfunction watchPendingTransactions(args, callback) {\n  let unwatch;\n  const createListener = publicClient => {\n    if (unwatch) unwatch();\n    unwatch = publicClient.watchPendingTransactions({\n      onTransactions: callback,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({\n    chainId: args.chainId\n  }) ?? getPublicClient({\n    chainId: args.chainId\n  });\n  createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(({\n    publicClient,\n    webSocketPublicClient\n  }) => ({\n    publicClient,\n    webSocketPublicClient\n  }), async ({\n    publicClient,\n    webSocketPublicClient\n  }) => {\n    const publicClient_2 = webSocketPublicClient ?? publicClient;\n    if (!args.chainId && publicClient_2) {\n      createListener(publicClient_2);\n    }\n  }, {\n    equalityFn: shallow6\n  });\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain({\n  chainId\n}) {\n  const {\n    chain: activeChain,\n    chains\n  } = getNetwork();\n  const activeChainId = activeChain?.id;\n  if (activeChainId && chainId !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find(x => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find(x => x.id === chainId)?.name ?? `Chain ${chainId}`\n    });\n  }\n}\nexport { configureChains, ChainMismatchError, ChainNotConfiguredError, ConnectorAlreadyConnectedError, ConfigChainsNotFound, SwitchChainNotSupportedError, ConnectorNotFoundError, deepEqual, deserialize, getCallParameters, getSendTransactionParameters, getUnit, serialize, noopStorage, createStorage, Config, createConfig, getConfig, connect, disconnect, erc20ABI, erc721ABI, erc4626ABI, fetchToken, getPublicClient, getWalletClient, getWebSocketPublicClient, watchPublicClient, watchWalletClient, watchWebSocketPublicClient, prepareWriteContract, getContract, multicall, readContract, readContracts, watchContractEvent, watchBlockNumber, watchMulticall, watchReadContract, watchReadContracts, writeContract, fetchBalance, getAccount, getNetwork, signMessage, signTypedData, switchNetwork, watchAccount, watchNetwork, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, fetchBlockNumber, fetchFeeData, fetchTransaction, prepareSendTransaction, sendTransaction, waitForTransaction, watchPendingTransactions };","map":{"version":3,"names":["InjectedConnector","__privateAdd","__privateGet","__privateMethod","__privateSet","createPublicClient","fallback","http","webSocket","configureChains","defaultChains","providers","batch","multicall","wait","pollingInterval","rank","retryCount","retryDelay","stallTimeout","length","Error","chains","httpUrls","wsUrls","chain","configExists","provider","apiConfig","some","id","rpcUrls","name","join","publicClient","chainId","activeChain","find","x","chainHttpUrls","transport","map","url","timeout","Object","assign","webSocketPublicClient","chainWsUrls","ConnectorNotFoundError","ChainMismatchError","constructor","targetChain","ChainNotConfiguredError","connectorId","ConnectorAlreadyConnectedError","arguments","message","ConfigChainsNotFound","SwitchChainNotSupportedError","connector","deepEqual","a","b","i","Array","isArray","valueOf","prototype","toString","keys","hasOwnProperty","call","key","findAndReplace","cacheRef","replace","item","entries","reduce","curr","value","deserialize","cachedString","cache","JSON","parse","deserializedCacheWithBigInts","data","startsWith","BigInt","getCallParameters","args","accessList","account","blockNumber","blockTag","gas","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","getSendTransactionParameters","weiUnits","getUnit","unit","Math","abs","getReferenceKey","cutoff","slice","getCutoff","array","index","createReplacer","replacer","circularReplacer","hasReplacer","hasCircularReplacer","thisCutoff","splice","valueCutoff","serialize","indent","stringify","value_","value2","persist","subscribeWithSelector","createStore","noopStorage","getItem","_key","setItem","_value","removeItem","createStorage","deserialize2","prefix","serialize2","storage","defaultState","error","console","warn","err","storeKey","_isAutoConnecting","_lastUsedConnector","_addEffects","addEffects_fn","Config","autoConnect","connectors","window","localStorage","logger","publicClients","Map","webSocketPublicClients","status","rawState","state","_error","connectors_","forEach","setStorage","store","getPublicClient","getWebSocketPublicClient","partialize","version","setTimeout","getState","lastUsedChainId","subscribe","setState","updater","newState","clearState","destroy","disconnect","sorted","sort","connected","ready","isAuthorized","connect","setConnectors","publicClient_","get","set","setPublicClient","clear","webSocketPublicClient_","setWebSocketPublicClient","setLastUsedConnector","lastUsedConnector","WeakMap","WeakSet","onChange","onDisconnect","onError","prevConnector","off","on","subscribePublicClient","subscribeWebSocketPublicClient","config","createConfig","config_","getConfig","config2","activeConnector","ContractFunctionExecutionError","ContractFunctionExecutionError3","formatUnits","formatUnits2","hexToString","hexToString2","trim","trim2","erc20ABI","type","inputs","indexed","stateMutability","outputs","erc20ABI_bytes32","erc721ABI","erc4626ABI","anonymous","fetchToken","address","fetchToken_","abi","erc20Config","decimals","symbol","totalSupply","readContracts","allowFailure","contracts","functionName","formatted","rest","dir","getWalletClient","walletClient","watchPublicClient","callback","handleChange","unsubscribe","shallow","watchWalletClient","chainId_","equalityFn","watchWebSocketPublicClient","prepareWriteContract","walletClient_","assertActiveChain","result","request","simulateContract","minimizedAbi","filter","abiItem","mode","getContract","getContract_","readContract","ContractFunctionExecutionError2","contractsByChainId","contracts2","contract","promises","parseInt","multicallResults","Promise","all","flat","resultIndexes","values","flatMap","results","allSettled","reason","shallow2","watchContractEvent","eventName","unwatch","watchEvent","onLogs","shallow3","watchBlockNumber","createListener","onBlockNumber","emitOnBegin","poll","listen","publicClient_2","watchMulticall","listenToBlock","watchReadContract","watchReadContracts","writeContract","_","__","res","hash","fetchBalance","token","fetchContractBalance","getBalance","nativeCurrency","getAccount","isConnected","isConnecting","isDisconnected","isReconnecting","getNetwork","activeChains","network","default","public","signMessage","signTypedData","domain","primaryType","types","switchNetwork","switchChain","shallow4","watchAccount","selector","shallow5","watchNetwork","getAddress","normalize","fetchEnsAddress","getEnsAddress","normalize2","fetchEnsAvatar","avatar","getEnsAvatar","getAddress2","fetchEnsName","getEnsName","normalize3","fetchEnsResolver","resolver","getEnsResolver","fetchBlockNumber","getBlockNumber","formatUnits3","parseGwei","fetchFeeData","units","block","getBlock","getGasPrice","lastBaseFeePerGas","baseFeePerGas","fetchTransaction","getTransaction","isAddress","prepareSendTransaction","gas_","to_","estimateGas","sendTransaction","hexToString3","waitForTransaction","confirmations","onReplaced","receipt","waitForTransactionReceipt","txn","transactionHash","code","substring","shallow6","watchPendingTransactions","onTransactions","activeChainId"],"sources":["/Users/envyhose/Desktop/programs/keepsafe_repo/keepsafe/client/node_modules/@wagmi/core/dist/chunk-LAFZBYO7.js"],"sourcesContent":["import {\n  InjectedConnector\n} from \"./chunk-BVC4KGLQ.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-MQXBDTVK.js\";\n\n// src/utils/configureChains.ts\nimport { createPublicClient, fallback, http, webSocket } from \"viem\";\nfunction configureChains(defaultChains, providers, {\n  batch = { multicall: { wait: 32 } },\n  pollingInterval = 4e3,\n  rank,\n  retryCount,\n  retryDelay,\n  stallTimeout\n} = {}) {\n  if (!defaultChains.length)\n    throw new Error(\"must have at least one chain\");\n  let chains = [];\n  const httpUrls = {};\n  const wsUrls = {};\n  for (const chain of defaultChains) {\n    let configExists = false;\n    for (const provider of providers) {\n      const apiConfig = provider(chain);\n      if (!apiConfig)\n        continue;\n      configExists = true;\n      if (!chains.some(({ id }) => id === chain.id)) {\n        chains = [...chains, apiConfig.chain];\n      }\n      httpUrls[chain.id] = [\n        ...httpUrls[chain.id] || [],\n        ...apiConfig.rpcUrls.http\n      ];\n      if (apiConfig.rpcUrls.webSocket) {\n        wsUrls[chain.id] = [\n          ...wsUrls[chain.id] || [],\n          ...apiConfig.rpcUrls.webSocket\n        ];\n      }\n    }\n    if (!configExists) {\n      throw new Error(\n        [\n          `Could not find valid provider configuration for chain \"${chain.name}\".\n`,\n          \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\",\n          \"Read more: https://wagmi.sh/core/providers/jsonRpc\"\n        ].join(\"\\n\")\n      );\n    }\n  }\n  return {\n    chains,\n    publicClient: ({ chainId }) => {\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\n      const chainHttpUrls = httpUrls[activeChain.id];\n      if (!chainHttpUrls || !chainHttpUrls[0])\n        throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      const publicClient = createPublicClient({\n        batch,\n        chain: activeChain,\n        transport: fallback(\n          chainHttpUrls.map((url) => http(url, { timeout: stallTimeout })),\n          { rank, retryCount, retryDelay }\n        ),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    },\n    webSocketPublicClient: ({ chainId }) => {\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\n      const chainWsUrls = wsUrls[activeChain.id];\n      if (!chainWsUrls || !chainWsUrls[0])\n        return void 0;\n      const publicClient = createPublicClient({\n        batch,\n        chain: activeChain,\n        transport: fallback(\n          chainWsUrls.map((url) => webSocket(url, { timeout: stallTimeout })),\n          { rank, retryCount, retryDelay }\n        ),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    }\n  };\n}\n\n// src/errors.ts\nimport { ConnectorNotFoundError } from \"@wagmi/connectors\";\nvar ChainMismatchError = class extends Error {\n  constructor({\n    activeChain,\n    targetChain\n  }) {\n    super(\n      `Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`\n    );\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor({\n    chainId,\n    connectorId\n  }) {\n    super(\n      `Chain \"${chainId}\" not configured${connectorId ? ` for connector \"${connectorId}\"` : \"\"}.`\n    );\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConfigChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConfigChainsNotFound\";\n    this.message = \"No chains were found on the wagmi config. Some functions that require a chain may not work.\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor({ connector }) {\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b)\n    return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor)\n      return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length)\n        return false;\n      for (i = length; i-- !== 0; )\n        if (!deepEqual(a[i], b[i]))\n          return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf)\n      return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString)\n      return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length)\n      return false;\n    for (i = length; i-- !== 0; )\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n        return false;\n    for (i = length; i-- !== 0; ) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key]))\n        return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nvar findAndReplace = (cacheRef, {\n  find,\n  replace\n}) => {\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map((item) => findAndReplace(item, { find, replace }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce(\n      (curr, [key, value]) => ({\n        ...curr,\n        [key]: findAndReplace(value, { find, replace })\n      }),\n      {}\n    );\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigInts = findAndReplace(cache, {\n    find: (data) => typeof data === \"string\" && data.startsWith(\"#bigint.\"),\n    replace: (data) => BigInt(data.replace(\"#bigint.\", \"\"))\n  });\n  return deserializedCacheWithBigInts;\n}\n\n// src/utils/getParameters.ts\nfunction getCallParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    blockNumber: args.blockNumber,\n    blockTag: args.blockTag,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\nfunction getSendTransactionParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\n\n// src/utils/getUnit.ts\nimport { weiUnits } from \"viem\";\nfunction getUnit(unit) {\n  if (typeof unit === \"number\")\n    return unit;\n  if (unit === \"wei\")\n    return 0;\n  return Math.abs(weiUnits[unit]);\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const { length } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(\n            this,\n            key,\n            value,\n            getReferenceKey(keys, valueCutoff)\n          ) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(\n    value,\n    createReplacer((key, value_) => {\n      const value2 = typeof value_ === \"bigint\" ? `#bigint.${value_.toString()}` : value_;\n      return replacer?.(key, value2) || value2;\n    }, circularReplacer),\n    indent ?? void 0\n  );\n}\n\n// src/config.ts\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\nimport { createStore } from \"zustand/vanilla\";\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: (_key) => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: (_key) => null\n};\nfunction createStorage({\n  deserialize: deserialize2 = deserialize,\n  key: prefix = \"wagmi\",\n  serialize: serialize2 = serialize,\n  storage\n}) {\n  return {\n    ...storage,\n    getItem: (key, defaultState = null) => {\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: (key) => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/config.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Config = class {\n  constructor({\n    autoConnect = false,\n    connectors = [new InjectedConnector()],\n    publicClient,\n    storage = createStorage({\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n    }),\n    logger = {\n      warn: console.warn\n    },\n    webSocketPublicClient\n  }) {\n    __privateAdd(this, _addEffects);\n    this.publicClients = /* @__PURE__ */ new Map();\n    this.webSocketPublicClients = /* @__PURE__ */ new Map();\n    __privateAdd(this, _isAutoConnecting, void 0);\n    __privateAdd(this, _lastUsedConnector, void 0);\n    this.args = {\n      autoConnect,\n      connectors,\n      logger,\n      publicClient,\n      storage,\n      webSocketPublicClient\n    };\n    let status = \"disconnected\";\n    let chainId;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey);\n        const data = rawState?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId = data?.chain?.id;\n      } catch (_error) {\n      }\n    }\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach((connector) => connector.setStorage(storage));\n    this.store = createStore(\n      subscribeWithSelector(\n        persist(\n          () => ({\n            connectors: connectors_,\n            publicClient: this.getPublicClient({ chainId }),\n            status,\n            webSocketPublicClient: this.getWebSocketPublicClient({ chainId })\n          }),\n          {\n            name: storeKey,\n            storage,\n            partialize: (state) => ({\n              ...autoConnect && {\n                data: {\n                  account: state?.data?.account,\n                  chain: state?.data?.chain\n                }\n              },\n              chains: state?.chains\n            }),\n            version: 2\n          }\n        )\n      )\n    );\n    this.storage = storage;\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\")\n      setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n  get publicClient() {\n    return this.store.getState().publicClient;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketPublicClient() {\n    return this.store.getState().webSocketPublicClient;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState((x) => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector)\n      await this.connector.disconnect?.();\n    __privateSet(this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if (__privateGet(this, _isAutoConnecting))\n      return;\n    __privateSet(this, _isAutoConnecting, true);\n    this.setState((x) => ({\n      ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(\n      (x) => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1\n    ) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized)\n        continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized)\n        continue;\n      const data = await connector.connect();\n      this.setState((x) => ({\n        ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected)\n      this.setState((x) => ({\n        ...x,\n        data: void 0,\n        status: \"disconnected\"\n      }));\n    __privateSet(this, _isAutoConnecting, false);\n    return this.data;\n  }\n  setConnectors(connectors) {\n    this.args = {\n      ...this.args,\n      connectors\n    };\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach((connector) => connector.setStorage(this.args.storage));\n    this.setState((x) => ({\n      ...x,\n      connectors: connectors_\n    }));\n  }\n  getPublicClient({ chainId } = {}) {\n    let publicClient_ = this.publicClients.get(-1);\n    if (publicClient_ && publicClient_?.chain.id === chainId)\n      return publicClient_;\n    publicClient_ = this.publicClients.get(chainId ?? -1);\n    if (publicClient_)\n      return publicClient_;\n    const { publicClient } = this.args;\n    publicClient_ = typeof publicClient === \"function\" ? publicClient({ chainId }) : publicClient;\n    this.publicClients.set(chainId ?? -1, publicClient_);\n    return publicClient_;\n  }\n  setPublicClient(publicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      publicClient\n    };\n    this.publicClients.clear();\n    this.setState((x) => ({\n      ...x,\n      publicClient: this.getPublicClient({ chainId })\n    }));\n  }\n  getWebSocketPublicClient({ chainId } = {}) {\n    let webSocketPublicClient_ = this.webSocketPublicClients.get(-1);\n    if (webSocketPublicClient_ && webSocketPublicClient_?.chain.id === chainId)\n      return webSocketPublicClient_;\n    webSocketPublicClient_ = this.webSocketPublicClients.get(chainId ?? -1);\n    if (webSocketPublicClient_)\n      return webSocketPublicClient_;\n    const { webSocketPublicClient } = this.args;\n    webSocketPublicClient_ = typeof webSocketPublicClient === \"function\" ? webSocketPublicClient({ chainId }) : webSocketPublicClient;\n    if (webSocketPublicClient_)\n      this.webSocketPublicClients.set(chainId ?? -1, webSocketPublicClient_);\n    return webSocketPublicClient_;\n  }\n  setWebSocketPublicClient(webSocketPublicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      webSocketPublicClient\n    };\n    this.webSocketPublicClients.clear();\n    this.setState((x) => ({\n      ...x,\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }));\n  }\n  setLastUsedConnector(lastUsedConnector = null) {\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function() {\n  const onChange = (data) => {\n    this.setState((x) => ({\n      ...x,\n      data: { ...x.data, ...data }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = (error) => {\n    this.setState((x) => ({ ...x, error }));\n  };\n  this.store.subscribe(\n    ({ connector }) => connector,\n    (connector, prevConnector) => {\n      prevConnector?.off?.(\"change\", onChange);\n      prevConnector?.off?.(\"disconnect\", onDisconnect);\n      prevConnector?.off?.(\"error\", onError);\n      if (!connector)\n        return;\n      connector.on?.(\"change\", onChange);\n      connector.on?.(\"disconnect\", onDisconnect);\n      connector.on?.(\"error\", onError);\n    }\n  );\n  const { publicClient, webSocketPublicClient } = this.args;\n  const subscribePublicClient = typeof publicClient === \"function\";\n  const subscribeWebSocketPublicClient = typeof webSocketPublicClient === \"function\";\n  if (subscribePublicClient || subscribeWebSocketPublicClient)\n    this.store.subscribe(\n      ({ data }) => data?.chain?.id,\n      (chainId) => {\n        this.setState((x) => ({\n          ...x,\n          publicClient: this.getPublicClient({ chainId }),\n          webSocketPublicClient: this.getWebSocketPublicClient({\n            chainId\n          })\n        }));\n      }\n    );\n};\nvar config;\nfunction createConfig(args) {\n  const config_ = new Config(args);\n  config = config_;\n  return config_;\n}\nfunction getConfig() {\n  if (!config) {\n    throw new Error(\n      \"No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config\"\n    );\n  }\n  return config;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect({ chainId, connector }) {\n  const config2 = getConfig();\n  const activeConnector = config2.connector;\n  if (activeConnector && connector.id === activeConnector.id)\n    throw new ConnectorAlreadyConnectedError();\n  try {\n    config2.setState((x) => ({ ...x, status: \"connecting\" }));\n    const data = await connector.connect({ chainId });\n    config2.setLastUsedConnector(connector.id);\n    config2.setState((x) => ({\n      ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    config2.storage.setItem(\"connected\", true);\n    return { ...data, connector };\n  } catch (err) {\n    config2.setState((x) => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const config2 = getConfig();\n  if (config2.connector)\n    await config2.connector.disconnect();\n  config2.clearState();\n  config2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\nimport {\n  ContractFunctionExecutionError as ContractFunctionExecutionError3,\n  formatUnits as formatUnits2,\n  hexToString as hexToString2,\n  trim as trim2\n} from \"viem\";\n\n// src/constants/abis.ts\nvar erc20ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc20ABI_bytes32 = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc721ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"ApprovalForAll\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"getApproved\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"isApprovedForAll\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"operator\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"ownerOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"id\",\n        type: \"uint256\"\n      },\n      {\n        name: \"data\",\n        type: \"bytes\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"setApprovalForAll\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenURI\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"tokeId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  }\n];\nvar erc4626ABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Approval\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Deposit\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Transfer\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Withdraw\",\n    type: \"event\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"asset\",\n    outputs: [\n      {\n        name: \"assetTokenAddress\",\n        type: \"address\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToAssets\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToShares\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"deposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxDeposit\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxMint\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxRedeem\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxWithdraw\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewDeposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewMint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewRedeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewWithdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"redeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalAssets\",\n    outputs: [\n      {\n        name: \"totalManagedAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"withdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n];\n\n// src/actions/contracts/fetchToken.ts\nimport {\n  ContractFunctionExecutionError,\n  formatUnits,\n  hexToString,\n  trim\n} from \"viem\";\nasync function fetchToken({\n  address,\n  chainId,\n  formatUnits: unit = 18\n}) {\n  async function fetchToken_({ abi }) {\n    const erc20Config = { address, abi, chainId };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [\n        { ...erc20Config, functionName: \"decimals\" },\n        { ...erc20Config, functionName: \"name\" },\n        { ...erc20Config, functionName: \"symbol\" },\n        { ...erc20Config, functionName: \"totalSupply\" }\n      ]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: formatUnits(totalSupply, getUnit(unit)),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({ abi: erc20ABI });\n  } catch (err) {\n    if (err instanceof ContractFunctionExecutionError) {\n      const { name, symbol, ...rest } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: hexToString(trim(name, { dir: \"right\" })),\n        symbol: hexToString(trim(symbol, { dir: \"right\" })),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/viem/getPublicClient.ts\nfunction getPublicClient({ chainId } = {}) {\n  const config2 = getConfig();\n  if (chainId)\n    return config2.getPublicClient({ chainId }) || config2.publicClient;\n  return config2.publicClient;\n}\n\n// src/actions/viem/getWalletClient.ts\nasync function getWalletClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  const walletClient = await config2.connector?.getWalletClient?.({ chainId }) || null;\n  return walletClient;\n}\n\n// src/actions/viem/getWebSocketPublicClient.ts\nfunction getWebSocketPublicClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  if (chainId)\n    return config2.getWebSocketPublicClient({ chainId }) || config2.webSocketPublicClient;\n  return config2.webSocketPublicClient;\n}\n\n// src/actions/viem/watchPublicClient.ts\nfunction watchPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getPublicClient(args));\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWalletClient.ts\nimport { shallow } from \"zustand/shallow\";\nfunction watchWalletClient({ chainId }, callback) {\n  const config2 = getConfig();\n  const handleChange = async ({ chainId: chainId_ }) => {\n    if (chainId && chainId_ && chainId !== chainId_)\n      return;\n    const walletClient = await getWalletClient({ chainId });\n    if (!getConfig().connector)\n      return callback(null);\n    return callback(walletClient);\n  };\n  const unsubscribe = config2.subscribe(\n    ({ data, connector }) => ({\n      account: data?.account,\n      chainId: data?.chain?.id,\n      connector\n    }),\n    handleChange,\n    {\n      equalityFn: shallow\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWebSocketPublicClient.ts\nfunction watchWebSocketPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getWebSocketPublicClient(args));\n  const unsubscribe = config2.subscribe(\n    ({ webSocketPublicClient }) => webSocketPublicClient,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract({\n  abi,\n  address,\n  args,\n  chainId,\n  functionName,\n  walletClient: walletClient_,\n  ...config2\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const walletClient = walletClient_ ?? await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  const {\n    account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getCallParameters(config2);\n  const { result, request } = await publicClient.simulateContract({\n    abi,\n    address,\n    functionName,\n    args,\n    account: account || walletClient.account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  });\n  const minimizedAbi = abi.filter(\n    (abiItem) => \"name\" in abiItem && abiItem.name === functionName\n  );\n  return {\n    mode: \"prepared\",\n    request: {\n      ...request,\n      abi: minimizedAbi,\n      chainId\n    },\n    result\n  };\n}\n\n// src/actions/contracts/getContract.ts\nimport { getContract as getContract_ } from \"viem\";\nfunction getContract({\n  address,\n  abi,\n  chainId,\n  walletClient\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return getContract_({\n    address,\n    abi,\n    publicClient,\n    walletClient\n  });\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall({\n  chainId,\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const publicClient = getPublicClient({ chainId });\n  if (!publicClient.chains)\n    throw new ConfigChainsNotFound();\n  if (chainId && publicClient.chain.id !== chainId)\n    throw new ChainNotConfiguredError({ chainId });\n  return publicClient.multicall({\n    allowFailure: args.allowFailure ?? true,\n    blockNumber,\n    blockTag,\n    contracts\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract({\n  address,\n  account,\n  chainId,\n  abi,\n  args,\n  functionName,\n  blockNumber,\n  blockTag\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.readContract({\n    abi,\n    address,\n    account,\n    functionName,\n    args,\n    blockNumber,\n    blockTag\n  });\n}\n\n// src/actions/contracts/readContracts.ts\nimport { ContractFunctionExecutionError as ContractFunctionExecutionError2 } from \"viem\";\nasync function readContracts({\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const { allowFailure = true } = args;\n  try {\n    const publicClient = getPublicClient();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId = contract.chainId ?? publicClient.chain.id;\n      return {\n        ...contracts2,\n        [chainId]: [...contracts2[chainId] || [], { contract, index }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(\n      ([chainId, contracts2]) => multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts: contracts2.map(\n          ({ contract }) => contract\n        ),\n        blockNumber,\n        blockTag\n      })\n    );\n    const multicallResults = (await Promise.all(promises())).flat();\n    const resultIndexes = Object.values(contractsByChainId).flatMap(\n      (contracts2) => contracts2.map(({ index }) => index)\n    );\n    return multicallResults.reduce((results, result, index) => {\n      if (results)\n        results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractFunctionExecutionError2)\n      throw err;\n    const promises = () => contracts.map(\n      (contract) => readContract({ ...contract, blockNumber, blockTag })\n    );\n    if (allowFailure)\n      return (await Promise.allSettled(promises())).map((result) => {\n        if (result.status === \"fulfilled\")\n          return { result: result.value, status: \"success\" };\n        return { error: result.reason, result: void 0, status: \"failure\" };\n      });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\nimport { shallow as shallow2 } from \"zustand/shallow\";\nfunction watchContractEvent({\n  address,\n  abi,\n  chainId,\n  eventName\n}, callback) {\n  let unwatch;\n  const watchEvent = async () => {\n    if (unwatch)\n      unwatch();\n    const publicClient = getWebSocketPublicClient({ chainId }) || getPublicClient({ chainId });\n    unwatch = publicClient.watchContractEvent({\n      address,\n      abi,\n      eventName,\n      onLogs: callback\n    });\n  };\n  watchEvent();\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    watchEvent,\n    { equalityFn: shallow2 }\n  );\n  return () => {\n    unwatch?.();\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nimport { shallow as shallow3 } from \"zustand/shallow\";\nfunction watchBlockNumber(args, callback) {\n  let unwatch;\n  const createListener = (publicClient) => {\n    if (unwatch)\n      unwatch();\n    unwatch = publicClient.watchBlockNumber({\n      onBlockNumber: callback,\n      emitOnBegin: true,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({ chainId: args.chainId }) ?? getPublicClient({ chainId: args.chainId });\n  if (args.listen)\n    createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    async ({ publicClient, webSocketPublicClient }) => {\n      const publicClient_2 = webSocketPublicClient ?? publicClient;\n      if (args.listen && !args.chainId && publicClient_2) {\n        createListener(publicClient_2);\n      }\n    },\n    {\n      equalityFn: shallow3\n    }\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await multicall(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContract(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContracts(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract(config2) {\n  const walletClient = await getWalletClient({ chainId: config2.chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (config2.chainId)\n    assertActiveChain({ chainId: config2.chainId });\n  let request;\n  if (config2.mode === \"prepared\") {\n    request = config2.request;\n  } else {\n    const { chainId: _, mode: __, ...args } = config2;\n    const res = await prepareWriteContract(args);\n    request = res.request;\n  }\n  const hash = await walletClient.writeContract({\n    ...request,\n    chain: null\n  });\n  return { hash };\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance({\n  address,\n  chainId,\n  formatUnits: unit,\n  token\n}) {\n  const config2 = getConfig();\n  const publicClient = getPublicClient({ chainId });\n  if (token) {\n    const fetchContractBalance = async ({ abi }) => {\n      const erc20Config = { abi, address: token, chainId };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [\n          {\n            ...erc20Config,\n            functionName: \"balanceOf\",\n            args: [address]\n          },\n          { ...erc20Config, functionName: \"decimals\" },\n          { ...erc20Config, functionName: \"symbol\" }\n        ]\n      });\n      return {\n        decimals,\n        formatted: formatUnits2(value2 ?? \"0\", getUnit(unit ?? decimals)),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({ abi: erc20ABI });\n    } catch (err) {\n      if (err instanceof ContractFunctionExecutionError3) {\n        const { symbol, ...rest } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: hexToString2(trim2(symbol, { dir: \"right\" })),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [\n    ...config2.publicClient.chains || [],\n    ...config2.chains ?? []\n  ];\n  const value = await publicClient.getBalance({ address });\n  const chain = chains.find((x) => x.id === publicClient.chain.id);\n  return {\n    decimals: chain?.nativeCurrency.decimals ?? 18,\n    formatted: formatUnits2(value ?? \"0\", getUnit(unit ?? 18)),\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\n    value\n  };\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const { data, connector, status } = getConfig();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const config2 = getConfig();\n  const chainId = config2.data?.chain?.id;\n  const activeChains = config2.chains ?? [];\n  const activeChain = [\n    ...config2.publicClient?.chains || [],\n    ...activeChains\n  ].find((x) => x.id === chainId) ?? {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n    rpcUrls: {\n      default: { http: [\"\"] },\n      public: { http: [\"\"] }\n    }\n  };\n  return {\n    chain: chainId ? {\n      ...activeChain,\n      ...config2.data?.chain,\n      id: chainId\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  const walletClient = await getWalletClient();\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  return await walletClient.signMessage({\n    message: args.message\n  });\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData({\n  domain,\n  message,\n  primaryType,\n  types\n}) {\n  const walletClient = await getWalletClient();\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  const { chainId } = domain;\n  if (chainId)\n    assertActiveChain({ chainId });\n  return walletClient.signTypedData({\n    message,\n    primaryType,\n    types,\n    domain\n  });\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork({\n  chainId\n}) {\n  const { connector } = getConfig();\n  if (!connector)\n    throw new ConnectorNotFoundError();\n  if (!connector.switchChain)\n    throw new SwitchChainNotSupportedError({\n      connector\n    });\n  return connector.switchChain(chainId);\n}\n\n// src/actions/accounts/watchAccount.ts\nimport { shallow as shallow4 } from \"zustand/shallow\";\nfunction watchAccount(callback, { selector = (x) => x } = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = config2.subscribe(\n    ({ data, connector, status }) => selector({\n      address: data?.account,\n      connector,\n      status\n    }),\n    handleChange,\n    {\n      equalityFn: shallow4\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\nimport { shallow as shallow5 } from \"zustand/shallow\";\nfunction watchNetwork(callback, { selector = (x) => x } = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = config2.subscribe(\n    ({ data, chains }) => selector({ chainId: data?.chain?.id, chains }),\n    handleChange,\n    {\n      equalityFn: shallow5\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/ens/fetchEnsAddress.ts\nimport { getAddress } from \"viem\";\nimport { normalize } from \"viem/ens\";\nasync function fetchEnsAddress({\n  chainId,\n  name\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const address = await publicClient.getEnsAddress({\n    name: normalize(name)\n  });\n  try {\n    if (address === \"0x0000000000000000000000000000000000000000\")\n      return null;\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\nimport { normalize as normalize2 } from \"viem/ens\";\nasync function fetchEnsAvatar({\n  name,\n  chainId\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const avatar = await publicClient.getEnsAvatar({ name: normalize2(name) });\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\nimport { getAddress as getAddress2 } from \"viem\";\nasync function fetchEnsName({\n  address,\n  chainId\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.getEnsName({\n    address: getAddress2(address)\n  });\n}\n\n// src/actions/ens/fetchEnsResolver.ts\nimport { normalize as normalize3 } from \"viem/ens\";\nasync function fetchEnsResolver({\n  chainId,\n  name\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const resolver = await publicClient.getEnsResolver({ name: normalize3(name) });\n  return resolver;\n}\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber({\n  chainId\n} = {}) {\n  const publicClient = getPublicClient({ chainId });\n  const blockNumber = await publicClient.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/fetchFeeData.ts\nimport { formatUnits as formatUnits3, parseGwei } from \"viem\";\nasync function fetchFeeData({\n  chainId,\n  formatUnits: units = \"gwei\"\n} = {}) {\n  const publicClient = getPublicClient({ chainId });\n  const block = await publicClient.getBlock();\n  let gasPrice = null;\n  try {\n    gasPrice = await publicClient.getGasPrice();\n  } catch {\n  }\n  let lastBaseFeePerGas = null;\n  let maxFeePerGas = null;\n  let maxPriorityFeePerGas = null;\n  if (block?.baseFeePerGas) {\n    lastBaseFeePerGas = block.baseFeePerGas;\n    maxPriorityFeePerGas = parseGwei(\"1\");\n    maxFeePerGas = block.baseFeePerGas * 2n + maxPriorityFeePerGas;\n  }\n  const unit = getUnit(units);\n  const formatted = {\n    gasPrice: gasPrice ? formatUnits3(gasPrice, unit) : null,\n    maxFeePerGas: maxFeePerGas ? formatUnits3(maxFeePerGas, unit) : null,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ? formatUnits3(maxPriorityFeePerGas, unit) : null\n  };\n  return {\n    lastBaseFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    formatted\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction({\n  chainId,\n  hash\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.getTransaction({ hash });\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nimport { isAddress } from \"viem\";\nasync function prepareSendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas: gas_,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  to: to_,\n  value,\n  walletClient: walletClient_\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const walletClient = walletClient_ ?? await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  const to = (to_ && !isAddress(to_) ? await fetchEnsAddress({ name: to_ }) : to_) || void 0;\n  if (to && !isAddress(to))\n    throw new Error(\"Invalid address\");\n  const gas = typeof gas_ === \"undefined\" ? await publicClient.estimateGas({\n    accessList,\n    account: walletClient.account,\n    data,\n    gas: gas_ ?? void 0,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value\n  }) : gas_ || void 0;\n  return {\n    accessList,\n    account,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode: \"prepared\",\n    nonce,\n    to,\n    value,\n    ...chainId ? { chainId } : {}\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value\n}) {\n  const walletClient = await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  let args;\n  if (mode === \"prepared\") {\n    args = {\n      account,\n      accessList,\n      chain: null,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    };\n  } else {\n    args = await prepareSendTransaction({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas: gas || null,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    });\n  }\n  const hash = await walletClient.sendTransaction({ ...args, chain: null });\n  return { hash };\n}\n\n// src/actions/transactions/waitForTransaction.ts\nimport { hexToString as hexToString3 } from \"viem\";\nasync function waitForTransaction({\n  chainId,\n  confirmations = 1,\n  hash,\n  onReplaced,\n  timeout = 0\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const receipt = await publicClient.waitForTransactionReceipt({\n    hash,\n    confirmations,\n    onReplaced,\n    timeout\n  });\n  if (receipt.status === \"reverted\") {\n    const txn = await publicClient.getTransaction({\n      hash: receipt.transactionHash\n    });\n    const code = await publicClient.call({\n      ...txn,\n      gasPrice: txn.type !== \"eip1559\" ? txn.gasPrice : void 0,\n      maxFeePerGas: txn.type === \"eip1559\" ? txn.maxFeePerGas : void 0,\n      maxPriorityFeePerGas: txn.type === \"eip1559\" ? txn.maxPriorityFeePerGas : void 0\n    });\n    const reason = hexToString3(`0x${code.substring(138)}`);\n    throw new Error(reason);\n  }\n  return receipt;\n}\n\n// src/actions/transactions/watchPendingTransactions.ts\nimport { shallow as shallow6 } from \"zustand/shallow\";\nfunction watchPendingTransactions(args, callback) {\n  let unwatch;\n  const createListener = (publicClient) => {\n    if (unwatch)\n      unwatch();\n    unwatch = publicClient.watchPendingTransactions({\n      onTransactions: callback,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({ chainId: args.chainId }) ?? getPublicClient({ chainId: args.chainId });\n  createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    async ({ publicClient, webSocketPublicClient }) => {\n      const publicClient_2 = webSocketPublicClient ?? publicClient;\n      if (!args.chainId && publicClient_2) {\n        createListener(publicClient_2);\n      }\n    },\n    {\n      equalityFn: shallow6\n    }\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain({ chainId }) {\n  const { chain: activeChain, chains } = getNetwork();\n  const activeChainId = activeChain?.id;\n  if (activeChainId && chainId !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find((x) => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find((x) => x.id === chainId)?.name ?? `Chain ${chainId}`\n    });\n  }\n}\n\nexport {\n  configureChains,\n  ChainMismatchError,\n  ChainNotConfiguredError,\n  ConnectorAlreadyConnectedError,\n  ConfigChainsNotFound,\n  SwitchChainNotSupportedError,\n  ConnectorNotFoundError,\n  deepEqual,\n  deserialize,\n  getCallParameters,\n  getSendTransactionParameters,\n  getUnit,\n  serialize,\n  noopStorage,\n  createStorage,\n  Config,\n  createConfig,\n  getConfig,\n  connect,\n  disconnect,\n  erc20ABI,\n  erc721ABI,\n  erc4626ABI,\n  fetchToken,\n  getPublicClient,\n  getWalletClient,\n  getWebSocketPublicClient,\n  watchPublicClient,\n  watchWalletClient,\n  watchWebSocketPublicClient,\n  prepareWriteContract,\n  getContract,\n  multicall,\n  readContract,\n  readContracts,\n  watchContractEvent,\n  watchBlockNumber,\n  watchMulticall,\n  watchReadContract,\n  watchReadContracts,\n  writeContract,\n  fetchBalance,\n  getAccount,\n  getNetwork,\n  signMessage,\n  signTypedData,\n  switchNetwork,\n  watchAccount,\n  watchNetwork,\n  fetchEnsAddress,\n  fetchEnsAvatar,\n  fetchEnsName,\n  fetchEnsResolver,\n  fetchBlockNumber,\n  fetchFeeData,\n  fetchTransaction,\n  prepareSendTransaction,\n  sendTransaction,\n  waitForTransaction,\n  watchPendingTransactions\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}