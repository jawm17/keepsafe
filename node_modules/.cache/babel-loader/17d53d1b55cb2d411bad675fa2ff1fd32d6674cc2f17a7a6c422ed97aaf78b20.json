{"ast":null,"code":"import { BaseError } from '../errors/base.js';\nimport { HttpRequestError } from '../errors/request.js';\nimport { ChainDisconnectedError, InternalRpcError, InvalidInputRpcError, InvalidParamsRpcError, InvalidRequestRpcError, JsonRpcVersionUnsupportedError, LimitExceededRpcError, MethodNotFoundRpcError, MethodNotSupportedRpcError, ParseRpcError, ProviderDisconnectedError, ResourceNotFoundRpcError, ResourceUnavailableRpcError, SwitchChainError, TransactionRejectedRpcError, UnauthorizedProviderError, UnknownRpcError, UnsupportedProviderMethodError, UserRejectedRequestError } from '../errors/rpc.js';\nimport { withRetry } from './promise/withRetry.js';\nexport const isDeterministicError = error => {\n  if ('code' in error) return error.code !== -1 && error.code !== -32004 && error.code !== -32005 && error.code !== -32042 && error.code !== -32603;\n  if (error instanceof HttpRequestError && error.status) return error.status !== 403 && error.status !== 408 && error.status !== 413 && error.status !== 429 && error.status !== 500 && error.status !== 502 && error.status !== 503 && error.status !== 504;\n  return false;\n};\nexport function buildRequest(request, {\n  retryDelay = 150,\n  retryCount = 3\n} = {}) {\n  return async args => withRetry(async () => {\n    try {\n      return await request(args);\n    } catch (err_) {\n      const err = err_;\n      switch (err.code) {\n        // -32700\n        case ParseRpcError.code:\n          throw new ParseRpcError(err);\n        // -32600\n        case InvalidRequestRpcError.code:\n          throw new InvalidRequestRpcError(err);\n        // -32601\n        case MethodNotFoundRpcError.code:\n          throw new MethodNotFoundRpcError(err);\n        // -32602\n        case InvalidParamsRpcError.code:\n          throw new InvalidParamsRpcError(err);\n        // -32603\n        case InternalRpcError.code:\n          throw new InternalRpcError(err);\n        // -32000\n        case InvalidInputRpcError.code:\n          throw new InvalidInputRpcError(err);\n        // -32001\n        case ResourceNotFoundRpcError.code:\n          throw new ResourceNotFoundRpcError(err);\n        // -32002\n        case ResourceUnavailableRpcError.code:\n          throw new ResourceUnavailableRpcError(err);\n        // -32003\n        case TransactionRejectedRpcError.code:\n          throw new TransactionRejectedRpcError(err);\n        // -32004\n        case MethodNotSupportedRpcError.code:\n          throw new MethodNotSupportedRpcError(err);\n        // -32005\n        case LimitExceededRpcError.code:\n          throw new LimitExceededRpcError(err);\n        // -32006\n        case JsonRpcVersionUnsupportedError.code:\n          throw new JsonRpcVersionUnsupportedError(err);\n        // 4001\n        case UserRejectedRequestError.code:\n          throw new UserRejectedRequestError(err);\n        // 4100\n        case UnauthorizedProviderError.code:\n          throw new UnauthorizedProviderError(err);\n        // 4200\n        case UnsupportedProviderMethodError.code:\n          throw new UnsupportedProviderMethodError(err);\n        // 4900\n        case ProviderDisconnectedError.code:\n          throw new ProviderDisconnectedError(err);\n        // 4901\n        case ChainDisconnectedError.code:\n          throw new ChainDisconnectedError(err);\n        // 4902\n        case SwitchChainError.code:\n          throw new SwitchChainError(err);\n        // CAIP-25: User Rejected Error\n        // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n        case 5000:\n          throw new UserRejectedRequestError(err);\n        default:\n          if (err_ instanceof BaseError) throw err_;\n          throw new UnknownRpcError(err);\n      }\n    }\n  }, {\n    delay: ({\n      count,\n      error\n    }) => {\n      // If we find a Retry-After header, let's retry after the given time.\n      if (error && error instanceof HttpRequestError) {\n        const retryAfter = error?.headers?.get('Retry-After');\n        if (retryAfter?.match(/\\d/)) return parseInt(retryAfter) * 1000;\n      }\n      // Otherwise, let's retry with an exponential backoff.\n      return ~~(1 << count) * retryDelay;\n    },\n    retryCount,\n    shouldRetry: ({\n      error\n    }) => !isDeterministicError(error)\n  });\n}","map":{"version":3,"names":["BaseError","HttpRequestError","ChainDisconnectedError","InternalRpcError","InvalidInputRpcError","InvalidParamsRpcError","InvalidRequestRpcError","JsonRpcVersionUnsupportedError","LimitExceededRpcError","MethodNotFoundRpcError","MethodNotSupportedRpcError","ParseRpcError","ProviderDisconnectedError","ResourceNotFoundRpcError","ResourceUnavailableRpcError","SwitchChainError","TransactionRejectedRpcError","UnauthorizedProviderError","UnknownRpcError","UnsupportedProviderMethodError","UserRejectedRequestError","withRetry","isDeterministicError","error","code","status","buildRequest","request","retryDelay","retryCount","args","err_","err","delay","count","retryAfter","headers","get","match","parseInt","shouldRetry"],"sources":["/Users/envyhose/Desktop/programs/keepsafe_repo/keepsafe/client/node_modules/viem/utils/buildRequest.ts"],"sourcesContent":["import { BaseError } from '../errors/base.js'\nimport { HttpRequestError } from '../errors/request.js'\nimport {\n  ChainDisconnectedError,\n  InternalRpcError,\n  InvalidInputRpcError,\n  InvalidParamsRpcError,\n  InvalidRequestRpcError,\n  JsonRpcVersionUnsupportedError,\n  LimitExceededRpcError,\n  MethodNotFoundRpcError,\n  MethodNotSupportedRpcError,\n  ParseRpcError,\n  ProviderDisconnectedError,\n  type ProviderRpcErrorCode,\n  ResourceNotFoundRpcError,\n  ResourceUnavailableRpcError,\n  type RpcError,\n  type RpcErrorCode,\n  SwitchChainError,\n  TransactionRejectedRpcError,\n  UnauthorizedProviderError,\n  UnknownRpcError,\n  UnsupportedProviderMethodError,\n  UserRejectedRequestError,\n} from '../errors/rpc.js'\n\nimport { withRetry } from './promise/withRetry.js'\n\nexport const isDeterministicError = (error: Error) => {\n  if ('code' in error)\n    return (\n      error.code !== -1 &&\n      error.code !== -32004 &&\n      error.code !== -32005 &&\n      error.code !== -32042 &&\n      error.code !== -32603\n    )\n  if (error instanceof HttpRequestError && error.status)\n    return (\n      error.status !== 403 &&\n      error.status !== 408 &&\n      error.status !== 413 &&\n      error.status !== 429 &&\n      error.status !== 500 &&\n      error.status !== 502 &&\n      error.status !== 503 &&\n      error.status !== 504\n    )\n  return false\n}\n\nexport function buildRequest<TRequest extends (args: any) => Promise<any>>(\n  request: TRequest,\n  {\n    retryDelay = 150,\n    retryCount = 3,\n  }: {\n    // The base delay (in ms) between retries.\n    retryDelay?: number\n    // The max number of times to retry.\n    retryCount?: number\n  } = {},\n) {\n  return (async (args: any) =>\n    withRetry(\n      async () => {\n        try {\n          return await request(args)\n        } catch (err_) {\n          const err = err_ as unknown as RpcError<\n            RpcErrorCode | ProviderRpcErrorCode\n          >\n          switch (err.code) {\n            // -32700\n            case ParseRpcError.code:\n              throw new ParseRpcError(err)\n            // -32600\n            case InvalidRequestRpcError.code:\n              throw new InvalidRequestRpcError(err)\n            // -32601\n            case MethodNotFoundRpcError.code:\n              throw new MethodNotFoundRpcError(err)\n            // -32602\n            case InvalidParamsRpcError.code:\n              throw new InvalidParamsRpcError(err)\n            // -32603\n            case InternalRpcError.code:\n              throw new InternalRpcError(err)\n            // -32000\n            case InvalidInputRpcError.code:\n              throw new InvalidInputRpcError(err)\n            // -32001\n            case ResourceNotFoundRpcError.code:\n              throw new ResourceNotFoundRpcError(err)\n            // -32002\n            case ResourceUnavailableRpcError.code:\n              throw new ResourceUnavailableRpcError(err)\n            // -32003\n            case TransactionRejectedRpcError.code:\n              throw new TransactionRejectedRpcError(err)\n            // -32004\n            case MethodNotSupportedRpcError.code:\n              throw new MethodNotSupportedRpcError(err)\n            // -32005\n            case LimitExceededRpcError.code:\n              throw new LimitExceededRpcError(err)\n            // -32006\n            case JsonRpcVersionUnsupportedError.code:\n              throw new JsonRpcVersionUnsupportedError(err)\n            // 4001\n            case UserRejectedRequestError.code:\n              throw new UserRejectedRequestError(err)\n            // 4100\n            case UnauthorizedProviderError.code:\n              throw new UnauthorizedProviderError(err)\n            // 4200\n            case UnsupportedProviderMethodError.code:\n              throw new UnsupportedProviderMethodError(err)\n            // 4900\n            case ProviderDisconnectedError.code:\n              throw new ProviderDisconnectedError(err)\n            // 4901\n            case ChainDisconnectedError.code:\n              throw new ChainDisconnectedError(err)\n            // 4902\n            case SwitchChainError.code:\n              throw new SwitchChainError(err)\n            // CAIP-25: User Rejected Error\n            // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n            case 5000:\n              throw new UserRejectedRequestError(err)\n            default:\n              if (err_ instanceof BaseError) throw err_\n              throw new UnknownRpcError(err as Error)\n          }\n        }\n      },\n      {\n        delay: ({ count, error }) => {\n          // If we find a Retry-After header, let's retry after the given time.\n          if (error && error instanceof HttpRequestError) {\n            const retryAfter = error?.headers?.get('Retry-After')\n            if (retryAfter?.match(/\\d/)) return parseInt(retryAfter) * 1000\n          }\n\n          // Otherwise, let's retry with an exponential backoff.\n          return ~~(1 << count) * retryDelay\n        },\n        retryCount,\n        shouldRetry: ({ error }) => !isDeterministicError(error),\n      },\n    )) as TRequest\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}